/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hotel.management.view;

import hotel.management.controller.RoomController;
import hotel.management.dto.ReservationDto;
import hotel.management.dto.RoomDto;
import hotel.management.view.CustomerView;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lenovo
 */
public class RoomView extends javax.swing.JFrame {

    private RoomController roomController;
    private List<RoomDto> roomDtos = new ArrayList<>();
    /**
     * Creates new form RoomView
     */
    public RoomView() {
        roomController = new RoomController();
        initComponents();
        loadCustomer();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        idlbl = new javax.swing.JLabel();
        idtxt = new javax.swing.JTextField();
        categorylbl = new javax.swing.JLabel();
        categorytxt = new javax.swing.JTextField();
        pricelbl = new javax.swing.JLabel();
        pricetxt = new javax.swing.JTextField();
        indatelbl = new javax.swing.JLabel();
        indatetxt = new javax.swing.JTextField();
        outdatelbl = new javax.swing.JLabel();
        outdatetxt = new javax.swing.JTextField();
        reslbl = new javax.swing.JLabel();
        restxt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        roomtbl = new javax.swing.JTable();
        savebtt = new javax.swing.JButton();
        updatebtt = new javax.swing.JButton();
        serchbtt = new javax.swing.JButton();
        deletebtt = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Room View");

        idlbl.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        idlbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        idlbl.setText("Room Id");

        idtxt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        categorylbl.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        categorylbl.setText("Room Category");

        categorytxt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        categorytxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categorytxtActionPerformed(evt);
            }
        });

        pricelbl.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        pricelbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pricelbl.setText("Room Price");

        indatelbl.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        indatelbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        indatelbl.setText("In Date");

        outdatelbl.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        outdatelbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        outdatelbl.setText("Out Date");

        outdatetxt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        reslbl.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        reslbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        reslbl.setText("Reserved");

        roomtbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        roomtbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(roomtbl);

        savebtt.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        savebtt.setText("Save");
        savebtt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savebttActionPerformed(evt);
            }
        });

        updatebtt.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        updatebtt.setText("Update");
        updatebtt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebttActionPerformed(evt);
            }
        });

        serchbtt.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        serchbtt.setText("Serach");
        serchbtt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serchbttActionPerformed(evt);
            }
        });

        deletebtt.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        deletebtt.setText("Delete");
        deletebtt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebttActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 799, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 12, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(indatelbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(outdatelbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(reslbl, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(idlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(categorylbl, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(restxt, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                                    .addComponent(indatetxt)
                                    .addComponent(pricetxt)
                                    .addComponent(categorytxt)
                                    .addComponent(outdatetxt)
                                    .addComponent(idtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(pricelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(71, 71, 71)
                        .addComponent(savebtt, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(updatebtt)
                        .addGap(28, 28, 28)
                        .addComponent(serchbtt)
                        .addGap(18, 18, 18)
                        .addComponent(deletebtt)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idlbl)
                    .addComponent(idtxt))
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(categorylbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(26, 26, 26))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(categorytxt, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(pricelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pricetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(26, 26, 26)
                                        .addComponent(indatelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(indatetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(27, 27, 27)
                                .addComponent(outdatelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(outdatetxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(savebtt)
                            .addComponent(updatebtt)
                            .addComponent(serchbtt)
                            .addComponent(deletebtt))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reslbl)
                    .addComponent(restxt, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void savebttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savebttActionPerformed
        SaveRoom();
    }//GEN-LAST:event_savebttActionPerformed

    private void updatebttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebttActionPerformed
        UpdateRoom();
    }//GEN-LAST:event_updatebttActionPerformed

    private void serchbttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serchbttActionPerformed
        SearchRoom();
    }//GEN-LAST:event_serchbttActionPerformed

    private void deletebttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebttActionPerformed
        DeleteRoom();
    }//GEN-LAST:event_deletebttActionPerformed

    private void categorytxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categorytxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_categorytxtActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RoomView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RoomView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RoomView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RoomView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RoomView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel categorylbl;
    private javax.swing.JTextField categorytxt;
    private javax.swing.JButton deletebtt;
    private javax.swing.JLabel idlbl;
    private javax.swing.JTextField idtxt;
    private javax.swing.JLabel indatelbl;
    private javax.swing.JTextField indatetxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel outdatelbl;
    private javax.swing.JTextField outdatetxt;
    private javax.swing.JLabel pricelbl;
    private javax.swing.JTextField pricetxt;
    private javax.swing.JLabel reslbl;
    private javax.swing.JTextField restxt;
    private javax.swing.JTable roomtbl;
    private javax.swing.JButton savebtt;
    private javax.swing.JButton serchbtt;
    private javax.swing.JButton updatebtt;
    // End of variables declaration//GEN-END:variables
   private void SaveRoom() {
        try {
            RoomDto roomDto = new RoomDto(idtxt.getText(),
                    categorytxt.getText(),
                    pricetxt.getText(),
                    indatetxt.getText(),
                    outdatetxt.getText(),
                    restxt.getText());

            roomDtos.add(roomDto);
            
            
            String resp = roomController.save(roomDto);
            JOptionPane.showMessageDialog(this, resp);
            loadCustomer();
            clear();
        } catch (Exception ex) {
            Logger.getLogger(RoomView.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }

    }

    private void UpdateRoom() {
        try {
            RoomDto dto = new RoomDto();
            dto.setRoomNumber(idtxt.getText());
            dto.setRoomCategory(categorytxt.getText());
            dto.setRoomPrice(pricetxt.getText());
            dto.setInDate(indatetxt.getText());
            dto.setOutDate(outdatetxt.getText());
            dto.setReseverd(restxt.getText());

            
            
            String resp = roomController.update(dto);
            JOptionPane.showMessageDialog(this, resp);
            loadCustomer();
            clear();
        } catch (Exception ex) {
            Logger.getLogger(RoomView.class.getName()).log(Level.SEVERE, null, ex);
             JOptionPane.showMessageDialog(this, ex.getMessage());
        }

    }

    private void SearchRoom() {
        try {
            String id = roomtbl.getValueAt(roomtbl.getSelectedRow(), 0).toString();

            RoomDto dto = roomController.get(id);
            if (dto != null) {
                idtxt.setText(dto.getRoomNumber());
                categorytxt.setText(dto.getRoomCategory());
                pricetxt.setText(dto.getRoomPrice());
                indatetxt.setText(dto.getInDate());
                outdatetxt.setText(dto.getOutDate());
                restxt.setText(dto.getReseverd());
            } else {
                JOptionPane.showMessageDialog(this, "Room not Found");
            }
        } catch (Exception ex) {
            Logger.getLogger(RoomView.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void DeleteRoom() {
      try {
            String custId = idtxt.getText();
            String resp = roomController.delete(custId);
            JOptionPane.showMessageDialog(this, resp);
            loadCustomer();
            clear();
        } catch (Exception ex) {
            Logger.getLogger(CustomerView.class.getName()).log(Level.SEVERE, null, ex);
             JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    
    }

    private void clear() {
        idtxt.setText("");
        categorytxt.setText("");
        pricetxt.setText("");
        indatetxt.setText("");
        outdatetxt.setText("");
        restxt.setText("");
    }

    private void loadCustomer() {

        try {
            String[] columns = {"room_number", "room_category", "room_price", "In_date", "Out_date", "reseverd"};
            DefaultTableModel dtm = new DefaultTableModel(columns, 0) {

                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };
            roomtbl.setModel(dtm);

            List<RoomDto> roomDtos = roomController.getAll();
            for (RoomDto roomDto : roomDtos) {
                Object[] rowData = {roomDto.getRoomNumber(),
                    roomDto.getRoomCategory(),
                    roomDto.getRoomPrice(),
                    roomDto.getInDate(),
                    roomDto.getOutDate(),
                    roomDto.getReseverd()};

                dtm.addRow(rowData);
            }
        } catch (Exception ex) {
            Logger.getLogger(RoomView.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }

    }

}
