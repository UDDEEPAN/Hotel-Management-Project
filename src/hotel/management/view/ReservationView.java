/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hotel.management.view;

import hotel.management.controller.CustomerController;
import hotel.management.controller.ReservationController;
import hotel.management.controller.RoomController;
import hotel.management.dto.CustomerDto;
import hotel.management.dto.ReservationDto;
import hotel.management.dto.RoomDto;
import java.awt.Container;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lenovo
 */
public class ReservationView extends javax.swing.JFrame {

    private CustomerController customerController;
    private RoomController roomController;
    private ReservationController reservationController;

    /**
     * Creates new form ReservationView
     */
    public ReservationView() {
        customerController = new CustomerController();
        roomController = new RoomController();
        reservationController = new ReservationController();
        initComponents();
        loadTable();
        showTime();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        reservationidlbl = new javax.swing.JLabel();
        reservationtxt = new javax.swing.JTextField();
        customeridlbl = new javax.swing.JLabel();
        customeridtxt = new javax.swing.JTextField();
        idbtt = new javax.swing.JButton();
        serchtxt = new javax.swing.JTextField();
        roomidlbl = new javax.swing.JLabel();
        roomidtxt = new javax.swing.JTextField();
        roomidbtt = new javax.swing.JButton();
        serchtxts = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblmodel = new javax.swing.JTable();
        addbtt = new javax.swing.JButton();
        placebtt = new javax.swing.JButton();
        datelbl = new javax.swing.JLabel();
        datetextfield = new javax.swing.JTextField();
        deltbtt = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        timelbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Reservation View");

        reservationidlbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        reservationidlbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        reservationidlbl.setText("Reservation Id");

        reservationtxt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        customeridlbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        customeridlbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        customeridlbl.setText("Customer Id");

        customeridtxt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        idbtt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        idbtt.setText("Serach");
        idbtt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idbttActionPerformed(evt);
            }
        });

        serchtxt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        roomidlbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        roomidlbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        roomidlbl.setText("Room Id");

        roomidbtt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        roomidbtt.setText("Serch");
        roomidbtt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomidbttActionPerformed(evt);
            }
        });

        tblmodel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblmodel);

        addbtt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        addbtt.setText("Add");
        addbtt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbttActionPerformed(evt);
            }
        });

        placebtt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        placebtt.setText("Place Reservation");
        placebtt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                placebttActionPerformed(evt);
            }
        });

        datelbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        datelbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        datelbl.setText("Date");

        datetextfield.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        deltbtt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        deltbtt.setText("Delete ");
        deltbtt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deltbttActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton1.setText("Serch");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        timelbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        timelbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        timelbl.setText("Time");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(addbtt)
                                .addGap(18, 18, 18)
                                .addComponent(placebtt)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deltbtt))
                            .addComponent(jButton1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(reservationidlbl, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                                    .addComponent(customeridlbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(customeridtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(reservationtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(roomidlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(roomidtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(idbtt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(roomidbtt, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                            .addComponent(datelbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(serchtxts, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(serchtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(datetextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 749, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timelbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(timelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reservationidlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reservationtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(datelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(datetextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customeridlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(customeridtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idbtt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(serchtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roomidlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roomidtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roomidbtt, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(serchtxts, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addbtt)
                            .addComponent(placebtt)
                            .addComponent(deltbtt))
                        .addGap(27, 27, 27)
                        .addComponent(jButton1)
                        .addContainerGap(646, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(301, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void idbttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idbttActionPerformed
        CustomerSerch();
    }//GEN-LAST:event_idbttActionPerformed

    private void roomidbttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomidbttActionPerformed
        RoomSerch();
    }//GEN-LAST:event_roomidbttActionPerformed

    private void addbttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbttActionPerformed
        AddReservation();
    }//GEN-LAST:event_addbttActionPerformed

    private void placebttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_placebttActionPerformed
        PlaceReservasion();
    }//GEN-LAST:event_placebttActionPerformed

    private void deltbttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deltbttActionPerformed
        Delete();
    }//GEN-LAST:event_deltbttActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        SerchDetail();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReservationView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReservationView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReservationView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReservationView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReservationView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addbtt;
    private javax.swing.JLabel customeridlbl;
    private javax.swing.JTextField customeridtxt;
    private javax.swing.JLabel datelbl;
    private javax.swing.JTextField datetextfield;
    private javax.swing.JButton deltbtt;
    private javax.swing.JButton idbtt;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton placebtt;
    private javax.swing.JLabel reservationidlbl;
    private javax.swing.JTextField reservationtxt;
    private javax.swing.JButton roomidbtt;
    private javax.swing.JLabel roomidlbl;
    private javax.swing.JTextField roomidtxt;
    private javax.swing.JTextField serchtxt;
    private javax.swing.JTextField serchtxts;
    private javax.swing.JTable tblmodel;
    private javax.swing.JLabel timelbl;
    // End of variables declaration//GEN-END:variables

    private void CustomerSerch() {
        try {
            String cust_id = customeridtxt.getText();
            CustomerDto dto = customerController.get(cust_id);
            if (dto != null) {
                serchtxt.setText(dto.getName());

            } else {
                JOptionPane.showMessageDialog(this, "Customer Not Found");
            }

        } catch (Exception ex) {
            Logger.getLogger(ReservationView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void RoomSerch() {
        try {
            String room_number = roomidtxt.getText();
            RoomDto dto = roomController.get(room_number);
            if (dto != null) {
                serchtxts.setText(dto.getRoomCategory() + " | " + dto.getRoomPrice() + " | " + dto.getReseverd());

            } else {
                JOptionPane.showMessageDialog(this, "Room Not Found");
            }

        } catch (Exception ex) {
            Logger.getLogger(ReservationView.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void AddReservation() {

        ReservationDto reservationDto = new ReservationDto();
        reservationDto.setReservation_id(reservationtxt.getText());
        reservationDto.setCust_id(customeridtxt.getText());
        reservationDto.setRoom_number(roomidtxt.getText());
        reservationDto.setDate(datetextfield.getText());

        Object[] rowData = {reservationDto.getReservation_id(), reservationDto.getCust_id(), reservationDto.getRoom_number(), reservationDto.getDate()};
        DefaultTableModel dtm = (DefaultTableModel) tblmodel.getModel();
        dtm.addRow(rowData);
//        clearItem();
    }

    private void PlaceReservasion() {
        try {
            ReservationDto dto = new ReservationDto(reservationtxt.getText(),
                    customeridtxt.getText(),
                    roomidtxt.getText(),
                    datetextfield.getText());
            System.out.println(" =============  ;  " + dto);
            String resp = reservationController.PlaceReservasion(dto);
            JOptionPane.showMessageDialog(this, resp);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "error");
            Logger.getLogger(ReservationView.class.getName()).log(Level.SEVERE, null, ex);

        }

    }

    private void loadTable() {
        try {
            String[] columns = {"reservation_id", "cust_id", " room_number", "date"};
            DefaultTableModel dtm = new DefaultTableModel(columns, 0) {

                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }

            };

            tblmodel.setModel(dtm);
            List<ReservationDto> reservationDtos = reservationController.getAll();
            for (ReservationDto reservationDto : reservationDtos) {
                Object[] rowData = {reservationDto.getReservation_id(),
                    reservationDto.getCust_id(),
                    reservationDto.getRoom_number(),
                    reservationDto.getDate()};
                dtm.addRow(rowData);

            }
        } catch (Exception ex) {
            Logger.getLogger(ReservationView.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    private void Delete() {
        try {
            String reservation_id = reservationtxt.getText();
            String resp = reservationController.Delete(reservation_id);
            JOptionPane.showMessageDialog(this, resp);
            loadTable();
            clearItem();
        } catch (Exception ex) {
            Logger.getLogger(CustomerView.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    private void clearItem() {
        roomidtxt.setText("");
        serchtxts.setText("");

    }

    private void SerchDetail() {

        String id = tblmodel.getValueAt(tblmodel.getSelectedRow(), 0).toString();
        try {
            ReservationDto dto = reservationController.get(id);

            if (dto != null) {
                reservationtxt.setText(dto.getReservation_id());
                customeridtxt.setText(dto.getCust_id());
                roomidtxt.setText(dto.getRoom_number());
                datetextfield.setText(dto.getDate());

            } else {
                JOptionPane.showMessageDialog(this, "Reservation Not Found");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    public void showTime() {
        new Timer(0, (ActionEvent e) -> {
            Date d = new Date();
            SimpleDateFormat sdf = new SimpleDateFormat("hh-mm-ss");
            String time = sdf.format(d);
            timelbl.setText(time);
        }).start();

    }

    private void TimeDuration() {
     
    }

}
